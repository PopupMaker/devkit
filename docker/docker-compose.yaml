---
version: "3.8"
services:

    # https://hub.docker.com/_/percona (mysql variant)
    mysql:
        platform: linux/x86_64
        image: percona:${MYSQL_VERSION:-8.0}
        command: ${MYSQL_COMMAND:-'--default-authentication-plugin=mysql_native_password'}
        container_name: ${PROJECT_NAME:-wordpress}_mysql
        volumes:
            - wp_data:/var/lib/mysql
        ports:
            - ${MYSQL_PORT:-3306}:3306
        expose:
            - "${MYSQL_PORT:-3306}"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-wordpress}
            MYSQL_DATABASE: ${MYSQL_DATABASE:-wordpress}
            MYSQL_USER: ${MYSQL_USER:-wordpress}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
        restart: always
        networks:
            - wp

    # https://hub.docker.com/_/wordpress
    wordpress:
        build:
            dockerfile: ./wordpress/Dockerfile
            context: . # a path to a directory containing a Dockerfile, or a url to a git repository
            args:
                # PHP Version is set in .env
                WP_VERSION: ${WP_VERSION:-}
                PHP_VERSION: ${PHP_VERSION:-}
                PHP_SERVER: ${PHP_SERVER:-}
        container_name: ${PROJECT_NAME:-wordpress}_php
        environment:
            VIRTUAL_HOST: ${WP_HTTP_HOST:-localhost}
            APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT:-/var/www/html/public}
        # This working directory is where the WP image will install WordPress.
        working_dir: /var/www/html/public/wp
        ports:
            - "${WP_HTTP_PORT:-80}:80"
        expose:
            - "${WP_HTTP_PORT:-80}"
        depends_on:
            - mysql
        restart: always
        volumes:
            - ..:/var/www/html
            - ../data/uploads:/var/www/html/public/content/uploads
        networks:
            - wp

# Top building block that defines
# All volumes used for this service
volumes:
    wp_data: {}

networks:
    wp: {}
